<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>日损录</title>
  
  <subtitle>Feilishu&#39;s Note</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.feilishu.top/"/>
  <updated>2017-12-07T13:04:43.476Z</updated>
  <id>http://www.feilishu.top/</id>
  
  <author>
    <name>Feilishu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Anaconda入门：安装及包与环境的管理（conda命令）。</title>
    <link href="http://www.feilishu.top/2017/12/05/anaconda/"/>
    <id>http://www.feilishu.top/2017/12/05/anaconda/</id>
    <published>2017-12-05T11:15:55.000Z</published>
    <updated>2017-12-07T13:04:43.476Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-Anaconda是什么？"><a href="#1-Anaconda是什么？" class="headerlink" title="1.Anaconda是什么？"></a>1.Anaconda是什么？</h1><p>Anaconda在英文中是“蟒蛇”，麻辣鸡（Nicki Minaj妮琪·米娜）有首歌就叫《Anaconda》<img src="http://p0dt0hezd.bkt.clouddn.com/anaconda_song.jpg" alt="anaconda">，表示像蟒蛇一样性感妖娆的身体。</p><p>这里，Anaconda指的是一个开源的Python发行版本，其包含了conda、Python等180多个科学包及其依赖项。 因为包含了大量的科学包，Anaconda 的下载文件比较大（约 500 MB），如果只需要某些包，或者需要节省带宽或存储空间，也可以使用Miniconda这个较小的发行版（仅包含conda和 Python）。</p><p>Anaconda的图标<img src="http://p0dt0hezd.bkt.clouddn.com/anaconda_log.jpg" alt="loggo">就像一个收尾互相咬住的“蟒蛇”。</p><p>你可能已经安装了 Python，那么为什么还需要 Anaconda？有以下3个原因：</p><ol><li>Anaconda 附带了一大批常用数据科学包，它附带了 conda、Python 和 150 多个科学包及其依赖项。因此你可以立即开始处理数据。</li><li>管理包。<br>Anaconda 是在 conda（一个包管理器和环境管理器）上发展出来的。<br>在数据分析中，你会用到很多第三方的包，而conda（包管理器）可以很好的帮助你在计算机上安装和管理这些包，包括安装、卸载和更新包。</li><li>管理环境。<br>比如你在A项目中用了 Python 2，而另一个项目B却要求使用Python 3，而同时安装两个Python版本可能会造成许多混乱和错误。这时候 conda就可以帮助你为不同的项目建立不同的运行环境。<br>还有很多项目使用的包版本不同，比如不同的pandas版本，不可能同时安装两个 Numpy 版本，你要做的应该是，为每个 Numpy 版本创建一个环境，然后项目的对应环境中工作。这时候conda就可以帮你做到。</li></ol><h1 id="2-安装Anaconda"><a href="#2-安装Anaconda" class="headerlink" title="2.安装Anaconda"></a>2.安装Anaconda</h1><p>Anaconda 可用于多个平台（ Windows、Mac OS X 和 Linux）。你可以在<a href="http://continuum.io/downloads" target="_blank" rel="noopener">Anaconda官网</a>上找到安装程序和安装说明。根据你的操作系统是32位还是64位选择对应的版本下载。<br>实际上，你选择对应python2或python3的哪一个版本是无所谓的，它只代表安装后缺省的python版本，因为你可以创建不同版本的环境，并可随时切换。<br>安装过程中，建议不选在将Anaconda目录加入到PATH环境变量中，以免与单独安装的Python路径产生冲突。执行conda命令时，可打开Anaconda Prompt，这是Anaconda自带的终端，启动时会设置必要的环境变量，令你可运行conda命令。若汝用普通的windows cmd命令，则可能会出现找不到命令的提示。<br>安装Anaconda后，需更新所有包，以防因为某些包的版本比较老旧，产生版本依赖关系错误。 在终端输入更新所有包的命令：<code>conda update --all</code>，并在提示是否更新时输入<code>y(Yes)</code>让更新继续。<br>conda命令从conda cloud下载更新包，由于在境外，下载速度比较慢，甚至会由于众所周知的原因，无法下载，报错：<code>CondaHTTPError: HTTP 000 CONNECTION FAILED</code>之类的网络错误，可以用下面的方法解决：<br>在终端中运行如下命令： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda config --add channels mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --set show_channel_urls yes</span><br></pre></td></tr></table></figure><p>添加清华大学的镜像服务器。</p><p>如果用命令行添加不上，可以在用户目录找到.condarcw文件。这个配置文件在 ~/.condarc (Linux/Mac) 或 C:\Users\当前用户名.condarc (Windows)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">channels:</span><br><span class="line"> - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line"> - defaults</span><br><span class="line">show_channel_urls: true</span><br></pre></td></tr></table></figure><p>如果使用conda安装包的时候还是很慢，那么可以考虑使用pip来安装，同样把 pip 的镜像源地址也改成国内的，豆瓣源速度比较快。修改 ~/.pip/pip.conf (Linux/Mac) 或 C:\Users\当前用户名\pip\pip.ini (Windows) 配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">trusted-host =  pypi.douban.com</span><br><span class="line">index-url = http://pypi.douban.com/simple</span><br></pre></td></tr></table></figure><h1 id="3-管理包"><a href="#3-管理包" class="headerlink" title="3.管理包"></a>3.管理包</h1><p>安装Anaconda后，就可以用conda命令方便的管理包了。</p><h2 id="3-1-安装包"><a href="#3-1-安装包" class="headerlink" title="3.1 安装包"></a>3.1 安装包</h2><p>命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install package_name</span><br></pre></td></tr></table></figure></p><p>例如：安装pandas，输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">condda install padas</span><br></pre></td></tr></table></figure></p><p>安装多个包，如同时安装pandas、numpy包：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install padas numpy</span><br></pre></td></tr></table></figure></p><p>指定包的版本号：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install numpy=1.10</span><br></pre></td></tr></table></figure></p><p>conda会自动安装依赖项，如scipy包依赖于numpy包，那么<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install scipy</span><br></pre></td></tr></table></figure></p><p>会自动安装numpy包，如果还未安装的话。</p><h2 id="3-2-卸载包"><a href="#3-2-卸载包" class="headerlink" title="3.2 卸载包"></a>3.2 卸载包</h2><p>命令：<code>conda remove package_name</code><br>例如，卸载padas包：<br><code>conda remove padas</code>  </p><h2 id="3-3-更新包"><a href="#3-3-更新包" class="headerlink" title="3.3 更新包"></a>3.3 更新包</h2><p>命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda update package_name</span><br></pre></td></tr></table></figure></p><p>更新所有的包，加<code>--all</code>选项：<code>conda update -all</code></p><h2 id="3-4-列出所有的包"><a href="#3-4-列出所有的包" class="headerlink" title="3.4 列出所有的包"></a>3.4 列出所有的包</h2><p>命令：<code>conda list</code>  </p><h2 id="3-5-搜索包"><a href="#3-5-搜索包" class="headerlink" title="3.5 搜索包"></a>3.5 搜索包</h2><p>命令：<code>conda search search_term</code><br>例如，想检查一下numpy包是否已经安装，可使用<code>conda search num</code>模糊查找列表中是否包含numpy包。</p><blockquote><p><strong>在conda中，anything is a package</strong>。conda本身可以看做是一个包，python环境也可以看做是一个包，anaconda也是一个包，因此除了普通的第三方包支持更新之外，这三个包也支持更新。 </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 更新conda本身</span><br><span class="line">conda update conda</span><br><span class="line"># 更新anaconda应用</span><br><span class="line">conda update anaconda</span><br><span class="line">#更新python，假设当前python环境版本是3.6.3，而最新版本是3.6.3，那么就会升级到3.6.3。</span><br><span class="line">conda update python</span><br></pre></td></tr></table></figure><h1 id="4-管理环境"><a href="#4-管理环境" class="headerlink" title="4.管理环境"></a>4.管理环境</h1><p>conda可以为不同的项目创建不同的环境。</p><h2 id="4-1-创建环境"><a href="#4-1-创建环境" class="headerlink" title="4.1 创建环境"></a>4.1 创建环境</h2><p>命令：<code>conda create --name env_name packages_name</code><br><code>--name</code>选项可简化为<code>-n</code>，指出要创建的环境名称，并可以在创建环境时安装包。<br>例如：<code>conda create -n py3 pandas</code>创建了名称为py3的环境，并安装pandas包。<br>创建环境的时候，可以指定python的版本：<br><code>conda create -n py3 python=3</code><br>环境py3中会安装最新版本的python3。<br><code>conda create -n py3 python=3.6</code><br>指定使用3.6版本的python。  </p><h2 id="4-2-激活环境"><a href="#4-2-激活环境" class="headerlink" title="4.2 激活环境"></a>4.2 激活环境</h2><p>windows中使用<code>activate env_name</code>命令，OS/X和linux中使用<code>source activate env_name</code>命令激活环境。<br>例如：<code>activate py3</code>进入py3环境后可使用<code>conda list</code>命令查看py3<br>环境中已经安装的包。在新的环境中，可使用<code>conda install package_name</code>命令继续安装其他需要的包。</p><h2 id="4-3-离开环境"><a href="#4-3-离开环境" class="headerlink" title="4.3 离开环境"></a>4.3 离开环境</h2><p>命令：<code>deactivate</code> （windows适用）或<code>source deactivate</code>（OS/X或Linux适用）。</p><h2 id="4-4-共享环境"><a href="#4-4-共享环境" class="headerlink" title="4.4 共享环境"></a>4.4 共享环境</h2><p>如果你想向他人共享你自己创建的环境，以供其他项目用你项目的配置，主要是保持包的版本一致。就可以使用<code>conda env export &gt; enviroment.yml</code>命令将源环境的包的配置数据保存到<code>enviroment.yml</code>文件中，其他项目就可以在目标环境中，执行命令<code>conda env update -f path/to/enviroment.yml</code>将目标环境更新为与源环境完全一样。</p><p>对于不使用conda的情况下，python的pip命令也是可以做到这一点的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip freeze &gt; enviroment.txt #将环境配置导出到enviroment.txt文本文件中。</span><br><span class="line">pip install -r /path/to/enviroment.txt #恢复环境</span><br></pre></td></tr></table></figure></p><h2 id="4-5-列出环境"><a href="#4-5-列出环境" class="headerlink" title="4.5 列出环境"></a>4.5 列出环境</h2><p>命令：<code>conda env list</code>列出所有的环境，当前激活的环境对应的目录前会显示一个*号。</p><h2 id="4-6-删除环境"><a href="#4-6-删除环境" class="headerlink" title="4.6 删除环境"></a>4.6 删除环境</h2><p>命令：<code>conda env remove -n env_name</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-Anaconda是什么？&quot;&gt;&lt;a href=&quot;#1-Anaconda是什么？&quot; class=&quot;headerlink&quot; title=&quot;1.Anaconda是什么？&quot;&gt;&lt;/a&gt;1.Anaconda是什么？&lt;/h1&gt;&lt;p&gt;Anaconda在英文中是“蟒蛇”，麻辣鸡（
      
    
    </summary>
    
      <category term="IT" scheme="http://www.feilishu.top/categories/IT/"/>
    
      <category term="Language" scheme="http://www.feilishu.top/categories/IT/Language/"/>
    
      <category term="Python" scheme="http://www.feilishu.top/categories/IT/Language/Python/"/>
    
    
      <category term="Anaconda" scheme="http://www.feilishu.top/tags/Anaconda/"/>
    
      <category term="Python" scheme="http://www.feilishu.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>神农鞭百草</title>
    <link href="http://www.feilishu.top/2017/12/03/shennong/"/>
    <id>http://www.feilishu.top/2017/12/03/shennong/</id>
    <published>2017-12-03T11:15:55.000Z</published>
    <updated>2017-12-03T11:56:08.495Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>神农①以赭鞭②鞭百草，尽知其平毒③寒温之性，臭味④所主。以⑤播百谷，故天下号神农也。</p><footer><strong>干宝</strong><cite>《搜神记》</cite></footer></blockquote><p><img src="http://p0dt0hezd.bkt.clouddn.com/shennong.jpg" alt=""></p><h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><p>①神农：又被成为炎帝，传说中太古时期的帝王。因为传说他教会人们务农，故被成为“神农氏”。<br>②赭（zhě）鞭：传说中神农氏用来检验百草的红色鞭子。<br>③平毒： 在这里指草药含不含毒性。平，即无毒。<br>④臭（xiù）味：气味，味道。这里指酸、咸、甘、苦、辛等五味。<br>⑤以： 根据。</p><h1 id="译文"><a href="#译文" class="headerlink" title="译文"></a>译文</h1><p>神农用他那红色的鞭子抽打各种草木，既而全面了解各种草木的无毒、有毒、寒、温等药性以及酸、咸、甘、苦、辛等五味主治的疾病，然后根据这些经验，教会人们播种庄稼，所以天下人称他为“神农”。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;&lt;p&gt;神农①以赭鞭②鞭百草，尽知其平毒③寒温之性，臭味④所主。以⑤播百谷，故天下号神农也。&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;干宝&lt;/strong&gt;&lt;cite&gt;《搜神记》&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img sr
      
    
    </summary>
    
      <category term="传统文化" scheme="http://www.feilishu.top/categories/%E4%BC%A0%E7%BB%9F%E6%96%87%E5%8C%96/"/>
    
      <category term="民间传说" scheme="http://www.feilishu.top/categories/%E4%BC%A0%E7%BB%9F%E6%96%87%E5%8C%96/%E6%B0%91%E9%97%B4%E4%BC%A0%E8%AF%B4/"/>
    
      <category term="神怪故事" scheme="http://www.feilishu.top/categories/%E4%BC%A0%E7%BB%9F%E6%96%87%E5%8C%96/%E6%B0%91%E9%97%B4%E4%BC%A0%E8%AF%B4/%E7%A5%9E%E6%80%AA%E6%95%85%E4%BA%8B/"/>
    
    
      <category term="搜神记" scheme="http://www.feilishu.top/tags/%E6%90%9C%E7%A5%9E%E8%AE%B0/"/>
    
      <category term="神农" scheme="http://www.feilishu.top/tags/%E7%A5%9E%E5%86%9C/"/>
    
  </entry>
  
  <entry>
    <title>Next主题使用Mathjax引擎书写LaTex数学公式</title>
    <link href="http://www.feilishu.top/2017/12/01/use-mathjax/"/>
    <id>http://www.feilishu.top/2017/12/01/use-mathjax/</id>
    <published>2017-12-01T08:18:29.193Z</published>
    <updated>2017-12-01T09:22:20.251Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MathJax-支持配置"><a href="#MathJax-支持配置" class="headerlink" title="MathJax 支持配置"></a>MathJax 支持配置</h1><p>在Next主题配置文件<code>_config.yml</code>中，找到<code>mathjax</code>配置段，将<code>enable</code>开关打开，但<code>per_page</code>开关建议不要打开，每个文件都加载<code>mathjax</code>引擎影响速度。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mathjax:</span><br><span class="line">  enable: true</span><br><span class="line">  per_page: false</span><br><span class="line">  cdn: //cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML</span><br></pre></td></tr></table></figure></p><p>在需要书写数学公式的页面的<code>Fromt-Matter</code>中打开<code>mathjax</code>开关即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: Next主题使用Mathjax引擎书写LaTex数学公式</span><br><span class="line">date: :year/:month/:day</span><br><span class="line">mathjax: true</span><br></pre></td></tr></table></figure></p><h1 id="Mathjax引擎渲染数学公式举例"><a href="#Mathjax引擎渲染数学公式举例" class="headerlink" title="Mathjax引擎渲染数学公式举例:"></a>Mathjax引擎渲染数学公式举例:</h1><p><code>$$ S = \pi r^2 $$</code>  </p><p>Mathjax引擎渲染为：$$ S = \pi r^2 $$  </p><p><code>$$ f = \Sigma_1^{100} x $$</code>  </p><p>Mathjax引擎渲染为：$$ f = \Sigma_1^{100} x $$  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin &#123;pmatrix&#125;</span><br><span class="line">     1 &amp; a_1 &amp; a_1^2 &amp; \cdots &amp; a_1^n \\</span><br><span class="line">     1 &amp; a_2 &amp; a_2^2 &amp; \cdots &amp; a_2^n \\</span><br><span class="line">     \vdots  &amp; \vdots&amp; \vdots &amp; \ddots &amp; \vdots \\</span><br><span class="line">     1 &amp; a_m &amp; a_m^2 &amp; \cdots &amp; a_m^n    </span><br><span class="line">\end &#123;pmatrix&#125; </span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p>Mathjax引擎渲染为：<br>$$<br>\begin{pmatrix}<br>     1 &amp; a_1 &amp; a_1^2 &amp; \cdots &amp; a_1^n \<br>     1 &amp; a_2 &amp; a_2^2 &amp; \cdots &amp; a_2^n \<br>     \vdots  &amp; \vdots&amp; \vdots &amp; \ddots &amp; \vdots \<br>     1 &amp; a_m &amp; a_m^2 &amp; \cdots &amp; a_m^n<br>\end{pmatrix}<br>$$</p><p>为什么不换行？？？？？!!!!<br>好大一个大坑，原因是<strong>Markdown中<code>\</code>是转义符号，LaTex公式中的<code>\\</code>换行符，必须再重复一遍，输入<code>\\\\</code>才能得到<code>\\</code>。</strong></p><p>所以：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;pmatrix&#125;</span><br><span class="line">     1 &amp; a_1 &amp; a_1^2 &amp; \cdots &amp; a_1^n \\\\</span><br><span class="line">     1 &amp; a_2 &amp; a_2^2 &amp; \cdots &amp; a_2^n \\\\</span><br><span class="line">     \vdots  &amp; \vdots&amp; \vdots &amp; \ddots &amp; \vdots \\\\</span><br><span class="line">     1 &amp; a_m &amp; a_m^2 &amp; \cdots &amp; a_m^n    </span><br><span class="line">\end&#123;pmatrix&#125;  </span><br><span class="line">$$</span><br></pre></td></tr></table></figure></p><p>Mathjax引擎才能渲染为：<br>$$<br>\begin{pmatrix}<br>     1 &amp; a_1 &amp; a_1^2 &amp; \cdots &amp; a_1^n \\<br>     1 &amp; a_2 &amp; a_2^2 &amp; \cdots &amp; a_2^n \\<br>     \vdots  &amp; \vdots&amp; \vdots &amp; \ddots &amp; \vdots \\<br>     1 &amp; a_m &amp; a_m^2 &amp; \cdots &amp; a_m^n<br>\end{pmatrix}<br>$$</p><p>问题解决了，感觉非常爽，是不是？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;MathJax-支持配置&quot;&gt;&lt;a href=&quot;#MathJax-支持配置&quot; class=&quot;headerlink&quot; title=&quot;MathJax 支持配置&quot;&gt;&lt;/a&gt;MathJax 支持配置&lt;/h1&gt;&lt;p&gt;在Next主题配置文件&lt;code&gt;_config.yml&lt;/
      
    
    </summary>
    
      <category term="IT" scheme="http://www.feilishu.top/categories/IT/"/>
    
      <category term="Blog" scheme="http://www.feilishu.top/categories/IT/Blog/"/>
    
    
      <category term="Next" scheme="http://www.feilishu.top/tags/Next/"/>
    
      <category term="Mathjax" scheme="http://www.feilishu.top/tags/Mathjax/"/>
    
      <category term="LaTex" scheme="http://www.feilishu.top/tags/LaTex/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Front-matter介绍</title>
    <link href="http://www.feilishu.top/2017/11/30/hexo-front-matter/"/>
    <id>http://www.feilishu.top/2017/11/30/hexo-front-matter/</id>
    <published>2017-11-30T13:45:25.000Z</published>
    <updated>2017-12-01T08:17:55.646Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h2><p>Front-matter是文件最上方以 — 分隔的区域，用于指定个别文件的变量，举例来说：</p><blockquote><p>title: Hello World<br>date: 2013/7/13 20:46:25<br>-–</p></blockquote><a id="more"></a><h3 id="预定义参数"><a href="#预定义参数" class="headerlink" title="预定义参数"></a>预定义参数</h3><p>您可在模板中使用这些参数值并加以利用。</p><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>layout</td><td>布局</td><td></td></tr><tr><td>title</td><td>标题</td><td></td></tr><tr><td>date</td><td>建立日期</td><td>文件建立日期</td></tr><tr><td>updated</td><td>更新日期</td><td>文件更新日期</td></tr><tr><td>comments</td><td>开启文章的评论功能</td><td>true</td></tr><tr><td>tags</td><td>标签（不适用于分页）</td><td></td></tr><tr><td>categories</td><td>分类（不适用于分页）</td><td></td></tr><tr><td>permalink</td><td>覆盖文章网址</td></tr></tbody></table><h3 id="分类和标签"><a href="#分类和标签" class="headerlink" title="分类和标签"></a>分类和标签</h3><p>只有文章支持分类和标签，您可以在 Front-matter 中设置。在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 Foo, Bar 不等于 Bar, Foo；而标签没有顺序和层次。</p><blockquote><p>categories:<br>- Diary<br>tags:<br>- PS3<br>- Games  </p></blockquote><h3 id="分类方法的分歧"><a href="#分类方法的分歧" class="headerlink" title="分类方法的分歧"></a>分类方法的分歧</h3><p>如果您有过使用WordPress的经验，就很容易误解Hexo的分类方式。WordPress支持对一篇文章设置多个分类，而且这些分类可以是同级的，也可以是父子分类。但是Hexo不支持指定多个同级分类。下面的指定方法：</p><blockquote><p>categories:<br>- Diary<br>- Life<br>会使分类Life成为Diary的子分类，而不是并列分类。因此，有必要为您的文章选择尽可能准确的分类。</p></blockquote><p>JSON Front-matter<br>除了 YAML 外，你也可以使用 JSON 来编写 Front-matter，只要将 — 代换成 ;;; 即可。</p><blockquote><p>“title”: “Hello World”,<br>“date”: “2013/7/13 20:46:25”<br>;;;</p></blockquote><p>最后顺便测试一下mathjax引擎渲染数学公式:<br><code>$$ S = \pi r^2 $$</code><br>$$ S = \pi r^2 $$ </p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Front-matter&quot;&gt;&lt;a href=&quot;#Front-matter&quot; class=&quot;headerlink&quot; title=&quot;Front-matter&quot;&gt;&lt;/a&gt;Front-matter&lt;/h2&gt;&lt;p&gt;Front-matter是文件最上方以 — 分隔的区域，用于指定个别文件的变量，举例来说：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;title: Hello World&lt;br&gt;date: 2013/7/13 20:46:25&lt;br&gt;-–&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="IT" scheme="http://www.feilishu.top/categories/IT/"/>
    
      <category term="Blog" scheme="http://www.feilishu.top/categories/IT/Blog/"/>
    
    
      <category term="Next" scheme="http://www.feilishu.top/tags/Next/"/>
    
      <category term="Hexo" scheme="http://www.feilishu.top/tags/Hexo/"/>
    
      <category term="Github" scheme="http://www.feilishu.top/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.feilishu.top/2017/11/29/hello-world/"/>
    <id>http://www.feilishu.top/2017/11/29/hello-world/</id>
    <published>2017-11-29T13:39:50.474Z</published>
    <updated>2017-11-29T13:39:50.474Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
